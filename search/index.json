[{"content":"实验 本地电脑命令行即可\nwin+r 输入cmd或powershell\n推荐powershell\nipconfig命令 ipconfig 1 ipconfig ipconfig /all 1 ipconfig /all ipconfig /all 返回信息详解 Windows IP Configuration 显示主机网络的总体配置信息：\nHost Name：计算机名称，例如 LAPTOP-0INSFLG6。 Primary DNS Suffix：主 DNS 后缀，通常为空，表示未加入域。 Node Type：节点类型（如 Hybrid 表示混合类型）。 IP Routing Enabled：是否启用 IP 路由（一般为 No）。 WINS Proxy Enabled：是否启用 WINS 代理，较少使用。 Ethernet adapter 以太网 本地有线网卡的信息：\nMedia State：媒体状态，如 Media disconnected 表示未连接。 Description：网卡说明，例如 Realtek PCIe GBE Family Controller。 Physical Address：物理地址（MAC地址）。 DHCP Enabled：是否启用 DHCP 自动获取IP。 Autoconfiguration Enabled：是否启用自动配置。 Wireless LAN adapter 本地连接* 1 / 2 Wi-Fi Direct 虚拟适配器，系统自动生成：\nMedia State：媒体状态，通常未连接。 Description：设备说明，如 Microsoft Wi-Fi Direct Virtual Adapter。 Physical Address：MAC地址。 DHCP/Autoconfiguration Enabled：是否启用 DHCP / 自动配置。 Ethernet adapter 以太网 2 / 3 由 VPN、游戏加速器等软件创建的虚拟网卡：\nDescription：设备名称，例如 TAP-Windows Adapter V9、Netease UU TAP-Win32 Adapter。 Media State：未连接。 Physical Address：MAC地址。 DHCP/Autoconfiguration Enabled：一般启用，但未连接。 Wireless LAN adapter WLAN 当前正在使用的无线网络适配器：\nDescription：无线网卡名称，例如 Realtek 8852CE WiFi。 Physical Address：MAC地址。 DHCP Enabled：启用 DHCP，动态获取 IP。 Autoconfiguration Enabled：启用自动配置。 IPv6 Address：当前分配的 IPv6 地址。 Temporary IPv6 Address：用于隐私保护的临时 IPv6。 Link-local IPv6 Address：局域网内部通信用的地址。 IPv4 Address：分配到的 IPv4 地址，例如 192.153.75.70。 Subnet Mask：子网掩码，定义子网范围。 Lease Obtained / Expires：IP 地址租约的获取和到期时间。 Default Gateway：默认网关，通常是路由器地址。 DHCP Server：为设备分配 IP 的 DHCP 服务器地址。 DHCPv6 IAID / DUID：IPv6 配置的唯一标识符。 DNS Servers：用于域名解析的服务器列表。 NetBIOS over Tcpip：是否启用了 NetBIOS（局域网名称识别协议）。 ping命令 ping 127.0.0.1 1 ping 127.0.0.1 127.0.0.1 是回环地址\n作用是测试本机网络协议栈是否正常工作 ping 本机IP ipconfig命令中的本机地址\nipv4或6随意 建议4\n1 ping 本机ip ping 局域网内其他ip ping 手机ip(由于防火墙可能ping不通) 手机地址有防火墙ping不通 (备选) Boson NetSim 10模拟 建立 设置ip略\npc1 192.168.1.1 255.255.255.0\npc1 192.168.1.2 255.255.255.0\nping 网关ip 网关ip位置\n1 ping 网关ip ping 远程ip 1 ping 1.1.1.1 1.1.1.1 是CloudflareDNS 服务器IP 随便ping ping localhost localhost：是一个特殊的主机名，代表“本机”\n1 ping localhost ping 互联网上服务器 1 ping www.bilibili.com tracert 1 tracert www.bilibili.com 1 tracert www.github.com 跳数 时间1 时间2 时间3 主机名/IP地址\n选项 含义 -d 不解析主机名，仅显示 IP 地址 -h \u0026lt;最大跃点\u0026gt; 设置最大跳数（默认 30） -w \u0026lt;超时\u0026gt; 每跳等待回应的时间（单位：毫秒） 发送 ICMP 回显请求（Echo Request）或 UDP 数据包； 设置每个数据包的 TTL（Time To Live）值从 1 开始递增； 每当数据包到达一个路由器，TTL 减 1； 当 TTL 减到 0，路由器丢弃该包并返回一个 “超时”（Time Exceeded）的 ICMP 报文； tracert 接收到这个超时响应，就知道这是一跳； 重复此过程直到到达目标主机或达到最大跳数（默认 30） netstat 有网络上下行就可以进行 打开浏览器访问 哔哩哔哩放个视频\nnetstat 1 netstat 适可而止就行统计数据太多了 太慢了 ctrl+c强制停止\nnetstat -s 1 netstat –s netstat -e 1 netstat –e netstat -r 1 netstat -r netstat -a 1 netstat -a 连接太多了\nnetstat -n 1 netstat -n 命令 核心用途 分析重点 netstat 查看连接状态 是否成功访问外部网络 netstat -s 协议层统计数据 检查 TCP/UDP 错误和传输情况 netstat -e 网卡接口统计信息 流量分析、是否有异常错误 netstat -r 路由信息 是否正确配置默认网关 netstat -a 所有监听与连接端口 有无监听服务/端口暴露风险 netstat -n 纯 IP 连接信息 快速定位目标地址 arp 记得管理员权限运行 arp -a 1 arp -a arp -s 1 2 3 4 arp -s ip地址 arp -s 192.168.1.200 00-aa-bb-cc-dd-ee //例子 记得删除 arp -a arp -d 1 2 3 arp -d 192.168.1.200 //删除ip arp -a 命令 主要功能 备注 arp -a 查看所有缓存的 ARP 项 包括动态学习与静态设置 arp -s IP MAC 添加静态 ARP 条目 永久有效，需管理员权限 arp -d IP 删除指定静态 ARP 项 动态项无法手动删除 route 需要管理员权限\nroute print 1 route print route add 1 2 route add 10.10.10.0 mask 255.255.255.0 192.168.1.1 metric 1 route print route change 1 2 route change 10.10.10.0 mask 255.255.255.0 192.168.1.254 route print route delete 1 2 route delete 10.10.10.0 route print 命令 示例 功能 备注 route print — 显示完整路由表 可用于排查连接问题 route add route add 10.10.10.0 mask 255.255.255.0 192.168.1.1 添加静态路由 需管理员权限 route change route change 10.10.10.0 mask 255.255.255.0 192.168.1.254 修改路由路径 要先存在 route delete route delete 10.10.10.0 删除指定路由 删除自定义路由防止冲突 net user net user 1 net user net user id 1 net user 用户id net use 当前计算机没有连接任何网络共享资源，也没有映射网络驱动器\n","date":"2025-05-22T20:17:43+08:00","image":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C3/imagetop-1_hu_964cd9b0a02c9bd5.png","permalink":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C3/","title":"计算机网络_实验3"},{"content":"实验 下载-2025春计算机网络实验指导书-1\nBoson NetSim 10 本地安装 下载地址\n百度网盘\nonedrive\n解压 得到三个文件 Setup为主程序安装文件\nPatched Mscon43demo.zip为修改破解文件\n安装 点击netsim10.exe 进行安装\n推荐安装到C:\\Boson目录中 不然会出现%Incomplete command问题\n二次解压 解压Mscon43demo.zip\n得到mscon43demo.dll文件 修改破解 把mscon43demo.dll复制到C:\\Boson, C:\\ProgramData\\Boson Software\\Boson Netsim10\\mscon43demo.dll，两个位置，进行替换与粘贴\n把Patch目录下的三个文件复制到C:\\Boson中，进行替换。\n运行 进入C盘C:\\Boson 右键图标发送快捷方式至桌面 点击桌面图标运行Boson NetSim 10\n实验1 模型组建 局域网组建\n点击左下角Network Designer进行配置 在左侧拖拽一台switch交换机两台pc 右键交换机 点击New Connection配置线路 分别连接两个pc至不同接口 实验配置 点击按键 进入实验配置 开启switch(y1s1其实不开启也能ping通) 不需要(\n在switch1配置界面分别输入\n1 2 enable //进入特权模式 configure terminal //进入配置模式 根据连接接口开启工作状态\npc1-\u0026gt;fe1 pc2-\u0026gt;fe2 1 2 3 interface f0/1 //进入f0/1端口配置模式 no shutdown //开启端口 exit //退出f0/1端口配置模式 f0/2同理\n1 2 3 interface f0/2 no shutdown exit )\npc配置 配置IP地址 选择pc1进行配置 输入配置IP地址和子网掩码\n1 ipconfig /ip 192.168.1.1 255.255.255.0 //事例 pc2同理ip地址主机位需变更\n1 ipconfig /ip 192.168.1.2 255.255.255.0 //事例 返回pc1\nping pc2测试连接\n1 ping 192.168.1.2 返回成功确认联通 实验2 模型组建 在1基础上添加一组交换机和两组pc PS:想偷懒可以不加交换机只加pc switch2 f0/1-\u0026gt;pc1\nf0/2-\u0026gt;pc2 交换机连接\n我这里选择将两台交换机f0/12相连\n现实中如果有高速吉比特网口优先接高速\n实验配置 不需要(\n交换机 pc 开启端口略过\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 switch1: interface f0/1 no shutdown exit interface f0/2 no shutdown exit switch2: interface f0/1 no shutdown exit interface f0/2 no shutdown exit )\npc配置通信 1 2 3 4 5 6 pc1: ipconfig /ip 192.168.1.1 255.255.255.0 pc3: ipconfig /ip 192.168.1.3 255.255.255.0 pc1: ping 192.168.1.3 实验3 模型组件不变 略\u0026hellip;\u0026hellip;\n实验配置 创建虚拟VLAN 进入switch1\n1 2 3 4 enable configure terminal vlan 10 exit vlan 20同理\n1 2 3 4 enable configure terminal vlan 20 exit switch1分配VLAN 分配vlan 10\n1 2 3 4 interface f0/1 switchport mode access switchport access vlan 10 exit 1 2 3 4 interface f0/2 switchport mode access switchport access vlan 10 exit 1 2 3 4 5 interface f0/12 switchport mode trunk switchport trunk encapsulation dot1q switchport trunk allowed vlan 10,20 exit switch2分配VLAN 分配vlan 20\n1 2 3 4 interface f0/1 switchport mode access switchport access vlan 20 exit 1 2 3 4 interface f0/2 switchport mode access switchport access vlan 20 exit 1 2 3 4 5 interface f0/12 switchport mode trunk switchport trunk encapsulation dot1q switchport trunk allowed vlan 10,20 exit 保存配置 1 2 Switch1# write memory Switch2# write memory 查看配置 1 2 Switch1# show running-config Switch1# show vlan brief pc配置通信 配置pc IP地址 不同vlan间网络位不能相同\n相同vlan间网络位相同,主机位不同\n1 2 3 4 5 6 7 8 9 10 11 12 PC1: IP 地址: 192.168.1.1 子网掩码: 255.255.255.0 PC2: IP 地址: 192.168.1.2 子网掩码: 255.255.255.0 PC3: IP 地址: 192.168.2.1 子网掩码: 255.255.255.0 PC4: IP 地址: 192.168.2.2 子网掩码: 255.255.255.0 相同vlan测试联通 进入pc1\n1 ping 192.168.1.2 不同vlan测试联通 1 ping 192.168.2.1 应显示失败 因为默认情况下 VLAN 之间通信域是隔离的 ","date":"2025-05-21T21:18:07+08:00","image":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C1/imagetop-1_hu_964cd9b0a02c9bd5.png","permalink":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C1/","title":"计算机网络_实验1"},{"content":"块元素 块级元素通常会从新行开始，并占据整行的宽度，因此它们会在页面上呈现为一块独立的内容块。 可以包含其他块级元素和行内元素。 常见的块级元素包括\u0026lt;div\u0026gt;，\u0026lt;p\u0026gt;，\u0026lt;h1\u0026gt;到\u0026lt;h6\u0026gt;，\u0026lt;ul\u0026gt;，\u0026lt;ol\u0026gt;，\u0026lt;1i\u0026gt;，\u0026lt;table\u0026gt;，\u0026lt;form\u0026gt;等。 行内元素 行内元素通常在同一行内呈现，不会独占一行。 只占据其内容所需的宽度，而不是整行的宽度。 行内元素不能包含块级元素，但可以包含其他行内元素。 常见的行内元素包括\u0026lt;span\u0026gt;，\u0026lt;a\u0026gt;，\u0026lt;strong\u0026gt;，\u0026lt;em\u0026gt;，\u0026lt;img\u0026gt;，\u0026lt;br\u0026gt;，\u0026lt;input\u0026gt;等。 div标签 没有语义 .类名 +tab 生成带类名div标签 #名称 +tab 生成带名称div标签 导航栏\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;div class=\u0026#34;nav\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接1\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接2\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接3\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接4\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接5\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;文章标题\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;\u0026gt;这是文章的第一段内容。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;这是文章的第二段内容。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;这是文章的第三段内容。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;这是文章的第四段内容。\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; 链接1 链接2 链接3 链接4 链接5 文章标题 这是文章的第一段内容。\n这是文章的第二段内容。\n这是文章的第三段内容。\n这是文章的第四段内容。\nspan标签 包装文本图片 1 2 3 4 5 6 7 \u0026lt;span\u0026gt;标签1\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签2\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签3\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签4\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签5\u0026lt;/span\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;span\u0026gt;这是一个\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; 标签1 标签2 标签3 标签4 标签5\n这是一个链接 \u0026lt;div\u0026gt; \u0026lt;span\u0026gt;通常配合css jsc一起使用\n","date":"2025-05-21T18:45:10+08:00","image":"https://2332ly.github.io/p/web4-%E5%9D%97%E4%B8%8E%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web4-%E5%9D%97%E4%B8%8E%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/","title":"Web4 块与行内元素"},{"content":"标签属性 介绍 \u0026lt;标签 属性名 = \u0026ldquo;属性值\u0026rdquo;\u0026gt;\n属性 描述/th\u003e class 类名 可以一个或多个 id id值 唯一 style 元素行内样式 超链接 属性herf 可定义路径 网页URL 电子邮箱地址 手机号 1 \u0026lt;a href=\u0026#34;https://www.bilibili.com\u0026#34;\u0026gt;bilibili\u0026lt;/a\u0026gt; bilibili\n属性target 打开方式 1 2 \u0026lt;a href=\u0026#34;Web3/PixPin_2025-05-21_16-04-10-1.png\u0026#34; target=\u0026#34;_parent\u0026#34;\u0026gt;路径文件\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;空\u0026lt;/a\u0026gt; 路径文件\n空\n图片 src图片路径(相对/绝对路径)/URL 1 \u0026lt;img src=\u0026#34;img1.webp\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt;\u0026lt;br\u0026gt; alt替代文本 1 \u0026lt;img src=\u0026#34;img2.webp\u0026#34; alt=\u0026#34;该图片无法显示\u0026#34;\u0026gt;\u0026lt;!--img2不存在--\u0026gt; width宽度 height高度 1 \u0026lt;img src=\u0026#34;img1.webp\u0026#34; alt=\u0026#34;\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;100\u0026#34;\u0026gt; ","date":"2025-05-21T16:48:54+08:00","image":"https://2332ly.github.io/p/web3-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web3-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7/","title":"Web3 标签属性"},{"content":"常用文本标签 body标签框内 1 2 3 \u0026lt;body\u0026gt; 在此修改 \u0026lt;/body\u0026gt; 标题标签 1 2 3 4 5 6 \u0026lt;h1\u0026gt;一级标题\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;二级标题\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;三级标题\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;四级标题\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;五级标题\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;六级标题\u0026lt;/h6\u0026gt; 一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 段落标签 1 2 3 4 5 6 7 8 \u0026lt;p\u0026gt; 换行标签\u0026lt;br\u0026gt; 这是一段文本\u0026lt;br\u0026gt; \u0026lt;b\u0026gt;字体加粗\u0026lt;/b\u0026gt;\u0026lt;br\u0026gt; \u0026lt;i\u0026gt;斜体\u0026lt;/i\u0026gt;\u0026lt;br\u0026gt; \u0026lt;u\u0026gt;下划线\u0026lt;/u\u0026gt;\u0026lt;br\u0026gt; \u0026lt;s\u0026gt;删除线\u0026lt;/s\u0026gt; \u0026lt;/p\u0026gt; 换行标签\n这是一段文本\n字体加粗\n斜体\n下划线\n删除线 列表 无序列表 1 2 3 4 5 \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;无序列表1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;无序列表2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;无序列表3\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 无序列表1 无序列表2 无序列表3 有序列表 1 2 3 4 5 \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;有序列表1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;有序列表2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;有序列表3\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; 有序列表1 有序列表2 有序列表3 表格标签 创建表格 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;列标题1\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;列标题2\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;列标题3\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;元素1\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素2\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素3\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;元素4\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素5\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素6\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;元素7\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素8\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素9\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; 列标题1 列标题2 列标题3 元素1 元素2 元素3 元素4 元素5 元素6 元素7 元素8 元素9 ","date":"2025-05-21T15:55:18+08:00","image":"https://2332ly.github.io/p/web2-%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web2-%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/","title":"Web2 文本标签"},{"content":"HTML 基础配置 vscode下载地址 插件下载\n1.Chinese (Simplified) 汉化插件 2.livesever(实时查看修改)\n3.Auto Rename Tag(自动补齐后标签) 4.HTML CSS Support css优化\n创建html文件 选择文件夹\n在vscode选择文件夹内新建.html后缀文件点击进入 在vscode中输入西文!按下tab自动补充html文档结构\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 更改title部分更改标签页名称\n1 \u0026lt;title\u0026gt;网页\u0026lt;/title\u0026gt; ","date":"2025-05-20T23:15:45+08:00","image":"https://2332ly.github.io/p/web1-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web1-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"Web1 环境搭建"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://2332ly.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://2332ly.github.io/p/emoji-support/","title":"Emoji Support"}]
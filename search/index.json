[{"content":"关系数据理论练习： 1、属性集闭包计算：讲义第4章Page71【例7-54】，在纸上独立完成运算，拍照上传。 2、求最小覆盖：讲义第4章Page93【例1】，在纸上独立完成运算，拍照上传。 3、模式分解：讲义第4章Page132【例4-4】，在纸上独立完成运算，拍照上传。 ##数据定义练习：\n某医院住院部信息系统中由病人表R（住院号，姓名，性别，科室号，病房，家庭住址），“住院号”唯一标识表R中的每一个元组，“性别”的取值只能为M或F，“家庭住址”包括省、市、街道、邮编，要求科室号参照科室关系D中的科室号；科室关系D（科室号，科室名，负责人，联系电话），“科室号”唯一标识关系D中的每一个元组。\na. 创建关系R的SQL语句如下：\n1 2 3 4 5 6 7 8 CREATE TABLE R ( 住院号 CHAR(8) ________, 姓名 CHAR(10), 性别 CHAR(1) ________, 科室号 CHAR(4), 家庭住址 ADDR, //ADDR为用户定义的类 ____________ ); b. 表R中复合属性是__________。（15年第40~43题） 问题1： A. PRIMARY KEY B. REFERENCES D（科室号） C. NOT NULL D. REFERENCES D（科室名）\n问题2： A. IN（M，F） B. CHECK（‘M’，‘F’） C. LIKE（‘M’，‘F’） D. CHECK（性别 IN（‘M’，‘F’））\n问题3： A. PRIMARY KEY（科室号）NOT NULL UNIQUE B. PRIMARY KEY（科室名）UNIQUE C. FOREIGN KEY（科室号）REFERENCES D（科室号） D. FOREIGN KEY（科室号）REFERENCES D（科室名）\n问题4： A. 住院号 B. 姓名 C. 病房 D. 家庭住址\n问题1： A\n问题2： D\n问题3： C 问题4： D\n#查询练习一： 给定一个部门表Departments，包含字段DepartmentID（部门ID）和DepartmentName（部门名称）；一个员工表Employees，包含字段EmployeeID（员工ID）、LastName（姓）、FirstName（名）、Salary（薪资）、Departmen（部门ID），其中Departmen是外键，参照部门表的主键DepartmentID。写出以下需求的SQL语句，上传SQL语句和运行结果图。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 -- 创建部门表 CREATE TABLE 部门表 ( 部门ID INT PRIMARY KEY, 部门名称 NVARCHAR(50) NOT NULL ); -- 插入部门数据 INSERT INTO 部门表 (部门ID, 部门名称) VALUES (1, N\u0026#39;销售部\u0026#39;), (2, N\u0026#39;市场部\u0026#39;), (3, N\u0026#39;研发部\u0026#39;), (4, N\u0026#39;人力资源部\u0026#39;); -- 创建员工表 CREATE TABLE 员工表 ( 员工ID INT PRIMARY KEY, 姓 NVARCHAR(50) NOT NULL, 名 NVARCHAR(50) NOT NULL, 薪资 DECIMAL(10, 2) NOT NULL, 部门ID INT, FOREIGN KEY (部门ID) REFERENCES 部门表(部门ID) ); -- 插入员工数据 INSERT INTO 员工表 (员工ID, 姓, 名, 薪资, 部门ID) VALUES (101, N\u0026#39;张\u0026#39;, N\u0026#39;三\u0026#39;, 6000.00, 1), (102, N\u0026#39;李\u0026#39;, N\u0026#39;四\u0026#39;, 4500.00, 1), (103, N\u0026#39;王\u0026#39;, N\u0026#39;五\u0026#39;, 7000.00, 2), (104, N\u0026#39;赵\u0026#39;, N\u0026#39;六\u0026#39;, 5500.00, 2), (105, N\u0026#39;钱\u0026#39;, N\u0026#39;七\u0026#39;, 8000.00, 3), (106, N\u0026#39;孙\u0026#39;, N\u0026#39;八\u0026#39;, 5000.00, 3), (107, N\u0026#39;周\u0026#39;, N\u0026#39;九\u0026#39;, 4000.00, 4), (108, N\u0026#39;吴\u0026#39;, N\u0026#39;十\u0026#39;, 6500.00, 1); 1、编写一个SQL查询，列出所有月薪超过5000的员工的姓名和薪资。\n1 2 3 SELECT 姓, 名, 薪资 FROM 员工表 WHERE 薪资 \u0026gt; 5000; 2、编写一个SQL查询，用以计算每个部门的平均薪资。\n1 2 3 4 SELECT D.部门名称, AVG(E.薪资) AS 平均薪资 FROM 部门表 AS D JOIN 员工表 AS E ON D.部门ID = E.部门ID GROUP BY D.部门名称; 3、编写一个SQL查询，找出薪资高于所在部门平均薪资的所有员工的姓名。\n1 2 3 4 SELECT E.姓, E.名, E.薪资, D.部门名称 FROM 员工表 AS E JOIN 部门表 AS D ON E.部门ID = D.部门ID WHERE E.薪资 \u0026gt; (SELECT AVG(薪资) FROM 员工表 WHERE 部门ID = E.部门ID); 4、编写一个SQL命令，将所有员工的薪资提高10%，但只限于那些部门平均薪资低于6000的部门。\n1 2 3 4 5 6 7 8 UPDATE 员工表 SET 薪资 = 薪资 * 1.10 WHERE 部门ID IN ( SELECT 部门ID FROM 员工表 GROUP BY 部门ID HAVING AVG(薪资) \u0026lt; 6000 ); 5、编写一个SQL查询，列出所有部门以及各部门的员工人数。\n1 2 3 4 SELECT D.部门名称, COUNT(E.员工ID) AS 员工人数 FROM 部门表 AS D LEFT JOIN 员工表 AS E ON D.部门ID = E.部门ID GROUP BY D.部门名称; 查询练习二： 设教学数据库 Education 有三个关系\n学生关系 S（SNO，SNAME，AGE，SEX，SDEPT）\n学习关系 SC（SNO，CNO，GRADE）\n课程关系 C（CNO，CNAME，CDEPT，TNAME）\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 -- 创建学生表 CREATE TABLE 学生表 ( 学号 CHAR(10) PRIMARY KEY, 姓名 NVARCHAR(50) NOT NULL, 年龄 INT, 性别 CHAR(1), 系别 NVARCHAR(50) ); -- 插入学生数据 INSERT INTO 学生表 (学号, 姓名, 年龄, 性别, 系别) VALUES (\u0026#39;S001\u0026#39;, N\u0026#39;小明\u0026#39;, 20, \u0026#39;M\u0026#39;, N\u0026#39;计算机系\u0026#39;), (\u0026#39;S002\u0026#39;, N\u0026#39;小红\u0026#39;, 21, \u0026#39;F\u0026#39;, N\u0026#39;软件工程系\u0026#39;), (\u0026#39;S003\u0026#39;, N\u0026#39;小刚\u0026#39;, 19, \u0026#39;M\u0026#39;, N\u0026#39;计算机系\u0026#39;), (\u0026#39;S004\u0026#39;, N\u0026#39;小丽\u0026#39;, 22, \u0026#39;F\u0026#39;, N\u0026#39;自动化系\u0026#39;), (\u0026#39;S005\u0026#39;, N\u0026#39;小强\u0026#39;, 20, \u0026#39;M\u0026#39;, N\u0026#39;计算机系\u0026#39;); -- 创建课程表 CREATE TABLE 课程表 ( 课程号 CHAR(10) PRIMARY KEY, 课程名 NVARCHAR(50) NOT NULL, 开课系 NVARCHAR(50), 教师名 NVARCHAR(50) ); -- 插入课程数据 INSERT INTO 课程表 (课程号, 课程名, 开课系, 教师名) VALUES (\u0026#39;C1\u0026#39;, N\u0026#39;数据库原理\u0026#39;, N\u0026#39;计算机系\u0026#39;, N\u0026#39;王老师\u0026#39;), (\u0026#39;C2\u0026#39;, N\u0026#39;数据结构\u0026#39;, N\u0026#39;计算机系\u0026#39;, N\u0026#39;李老师\u0026#39;), (\u0026#39;C3\u0026#39;, N\u0026#39;操作系统\u0026#39;, N\u0026#39;软件工程系\u0026#39;, N\u0026#39;张老师\u0026#39;), (\u0026#39;C4\u0026#39;, N\u0026#39;高等数学\u0026#39;, N\u0026#39;数学系\u0026#39;, N\u0026#39;赵老师\u0026#39;), (\u0026#39;C5\u0026#39;, N\u0026#39;DS\u0026#39;, N\u0026#39;计算机系\u0026#39;, N\u0026#39;陈老师\u0026#39;); -- 创建学习表 CREATE TABLE 学习表 ( 学号 CHAR(10), 课程号 CHAR(10), 成绩 INT, PRIMARY KEY (学号, 课程号), FOREIGN KEY (学号) REFERENCES 学生表(学号), FOREIGN KEY (课程号) REFERENCES 课程表(课程号) ); -- 插入学习数据 INSERT INTO 学习表 (学号, 课程号, 成绩) VALUES (\u0026#39;S001\u0026#39;, \u0026#39;C1\u0026#39;, 85), (\u0026#39;S001\u0026#39;, \u0026#39;C2\u0026#39;, 90), (\u0026#39;S002\u0026#39;, \u0026#39;C1\u0026#39;, 78), (\u0026#39;S002\u0026#39;, \u0026#39;C3\u0026#39;, 88), (\u0026#39;S003\u0026#39;, \u0026#39;C2\u0026#39;, 75), (\u0026#39;S003\u0026#39;, \u0026#39;C4\u0026#39;, 80), (\u0026#39;S004\u0026#39;, \u0026#39;C1\u0026#39;, 92), (\u0026#39;S004\u0026#39;, \u0026#39;C3\u0026#39;, 85), (\u0026#39;S005\u0026#39;, \u0026#39;C2\u0026#39;, 88), (\u0026#39;S005\u0026#39;, \u0026#39;C4\u0026#39;, 95), (\u0026#39;S001\u0026#39;, \u0026#39;C5\u0026#39;, 80); -- S001 选修了 \u0026#39;DS\u0026#39; 写出以下需求的SQL语句，上传SQL语句和运行结果图。\n1、检索学习课程号为 C2 的学生学号与姓名；\n1 2 3 4 SELECT S.学号, S.姓名 FROM 学生表 AS S JOIN 学习表 AS SC ON S.学号 = SC.学号 WHERE SC.课程号 = \u0026#39;C2\u0026#39;; 2、检索选修课程名为“DS”的学生学号与姓名；\n1 2 3 4 5 SELECT S.学号, S.姓名 FROM 学生表 AS S JOIN 学习表 AS SC ON S.学号 = SC.学号 JOIN 课程表 AS C ON SC.课程号 = C.课程号 WHERE C.课程名 = \u0026#39;DS\u0026#39;; 3、检索至少选修课程号为 C2 和 C4 的学生学号。\n1 2 3 4 5 6 7 SELECT 学号 FROM 学习表 WHERE 课程号 = \u0026#39;C2\u0026#39; INTERSECT SELECT 学号 FROM 学习表 WHERE 课程号 = \u0026#39;C4\u0026#39;; 存储过程和触发器练习： 某企业网上书城系统的部分关系模式如下：\n书籍信息表：books（book_no, book_name, press_no, ISBN, price, sale_type, all_nums），其中属性含义分别为：书籍编码、书籍名称、出版商编码、ISBN、销售价格、销售分类、当前库存数量；\n书籍销售订单表：orders（order_no, book_no, book_nums, book_price, order_date, amount），其中属性分别为：订单编码、书籍编码、书籍数量、书籍价格、订单日期和总金额。\n书籍再购额度表：booklimit（book_no, sale_type, limit_amount），其中属性含义分别为：书籍编码、销售分类、再购额度；\n书籍最低库存表：bookminlevel（book_no, level），其中属性含义分别为：书籍编码、书籍最低库存数量；\n书籍采购表：bookorders（book_no, order_amount），其中属性含义分别为：书籍编码和采购数量。\n有关关系模式的说明如下：\n（1）下划线标出的属性是表的主码。\n（2）根据书籍销售情况来确定书籍的销售分类：销售数量小于1万的为普通类型，其值为0；1万及以上的为热销类型，其值为1。\n（3）系统具备书籍自动补货功能，涉及到的关系模式有：书籍再购额度表、书籍最低库存表、书籍采购表。其业务逻辑是：当某书籍库存小于其最低库存数量时，根据书籍的销售分类以及书籍再购额度表中的再购额度，生成书籍采购表中的采购订单，完成自动补货操作。\n【问题1】\n系统定期扫描书籍销售订单表，根据书籍总的销售情况来确定书籍的销售类别。下面是系统中设置某书籍销售类别的存储过程，结束时需显示提交返回。请不全空缺处的代码。\n1 2 3 4 5 6 7 8 9 10 11 12 CREATE PROCEDURE UpdateBookSaleType (IN bno varchar(20)) DECLARE all_nums number(6); BEGIN SELECT ____(a)____ (book_nums) INTO all_nums FROM orders WHERE book_no=____(b)____; IF all_nums\u0026lt;=____(c)____ THEN UPDATE books SET sale_type=0 WHERE book_no=bno; ELSE UPDATE books SET sale_type=____(d)____ WHERE book_no=bno; END IF END (a) SUM (计算总销售数量) (b) bno (根据传入的书籍编码进行筛选) (c) 10000 (销售数量小于1万为普通类型) (d) 1 (1万及以上为热销类型) 【问题2】 下面是系统中自动补货功能对应的触发器，请补全空缺处的代码。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 CREATE TRIGGER BookOrdersTrigger ____(f)____ update of ____ (g)____ on books ____(h)____ WHEN ____(i)____ \u0026lt; (SELECT level FROM bookminlevel WHERE bookminlevel.book_no=OLD.book_no) AND ____(j)____ \u0026gt;= (SELECT level FROM bookminlevel WHERE bookminlevel.book_no=OLD.book_no) BEGIN INSERT INTO ____(k)____ (SELECT book_no, limit_amount FROM booklimit as TMP WHERE TMP.book_no=OLD.book_no AND TMP.sale_type=OLD.sale_type); END (f) AFTER (在更新操作之后触发) (g) all_nums (当books表的all_nums字段更新时触发) (h) FOR EACH ROW (对于每一行受影响的行都执行触发器) (i) NEW.all_nums (更新后的库存数量) (j) OLD.all_nums (更新前的库存数量) (k) bookorders (插入到书籍采购表) 游标的练习： 1、讲义第8章Page47的【例8-2】，练习游标，上传编写的SQL语句和运行结果截图。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 -- **创建仓库表 (如果不存在，请先运行此段)** -- 注意：在实际运行中，请确保您有权限创建表，并且数据库已正确选择。 IF OBJECT_ID(N\u0026#39;仓库表\u0026#39;, N\u0026#39;U\u0026#39;) IS NOT NULL DROP TABLE 仓库表; GO CREATE TABLE 仓库表 ( 仓库号 VARCHAR(10) PRIMARY KEY, 所在城市 NVARCHAR(100), -- 使用 NVARCHAR 兼容中文 仓库面积 INT ); GO -- **插入示例数据（根据图中仓库列表提供的数据）** INSERT INTO 仓库表 (仓库号, 所在城市, 仓库面积) VALUES (\u0026#39;WH1\u0026#39;, N\u0026#39;北京\u0026#39;, 500), (\u0026#39;WH2\u0026#39;, N\u0026#39;上海\u0026#39;, 370), (\u0026#39;WH3\u0026#39;, N\u0026#39;广州\u0026#39;, 300), (\u0026#39;WH4\u0026#39;, N\u0026#39;武汉\u0026#39;, 400), (\u0026#39;WH5\u0026#39;, N\u0026#39;成都\u0026#39;, 450), (\u0026#39;WH6\u0026#39;, N\u0026#39;北京\u0026#39;, 650); GO -- **游标操作代码 (与图中提供的示例完全一致)** -- 从游标wh_cursor读当前记录到变量 DECLARE wh_cursor CURSOR FOR SELECT 仓库号, 所在城市, 仓库面积 FROM 仓库表; OPEN wh_cursor; -- 声明变量 DECLARE @whno VARCHAR(10), @city NVARCHAR(100), @area INT; FETCH NEXT FROM wh_cursor INTO @whno, @city, @area; WHILE @@FETCH_STATUS = 0 BEGIN PRINT @whno + \u0026#39; \u0026#39; + @city + \u0026#39; \u0026#39; + STR(@area, 4); FETCH NEXT FROM wh_cursor INTO @whno, @city, @area; END -- 关闭游标 CLOSE wh_cursor; -- 释放游标 DEALLOCATE wh_cursor; GO 并发事务的干扰问题： 系统中有三个事务T1、T2、T3分别对数据R1和R2进行操作，其中R1和R2的初值R1=120、R2=50，假设事务T1、T2、T3操作的情况如下图所示，图中T1和T2间并发操作（ ）问题，T2与T3间并发操作（ ）问题。（12年第45~46题）\n时间 T1 T2 T3 t1 Read(R1); t2 Read(R2); t3 X = R1 + R2; t4 Read(R1); t5 Read(R2); t6 Read(R2); t8 Write(R2); t9 Read(R1); t10 Read(R2); t11 X = R1 + R2; t12 演算X R2 = R2 + 80; t13 Write(R2); 1 2 3 4 5 6 7 8 9 10 问题1： B T1在t1和t2读取R1和R2，计算X。 T2在t4-t8修改了R2并写入。 T1在t9和t10再次读取R1和R2。由于T2的修改，T1第二次读R2时，R2的值已经改变（R2=R1+R2），导致T1两次读取R2的结果不一致，这是不可重复读问题。 问题2： C T2在t5读取R2 (初始值50)。 T3在t6读取R2 (初始值50)。 T2在t7计算R2=R1+R2 (120+50=170)，并在t8写入R2=170。 T3在t12计算R2=R2+80 (50+80=130)，并在t13写入R2=130。 T3的写入覆盖了T2的写入，导致T2的修改丢失。 隔离级别练习： 事务T1中有两次查询学生表中的男生人数，在这两次查询执行中间，事务T2对学生表中加入了一条男生记录，导致T1两次查询的结果不一致，此类问题属于（ ），为解决这一问题，应采用的隔离级别是（ ）。（14年第54~55题）\n问题1：\nA. 不可重复读\nB. 读脏数据\nC. 丢失修改\nD. 幻象读\n问题2：\nA. Read Uncommitted\nB. Read Committed\nC. Repeatable Read\nD. Serializable\n问题1： D. 幻象读\n问题2： D. Serializable\n封锁练习： 若事务T1对数据D1已加排它锁，事务T2对数据D2已加共享锁，那么事务T2对数据D1（ ）；事务T1对数据D2（ ）。（13年第45~46题） 问题1： A. 加共享锁成功，加排它锁失败 B. 加排它锁成功，加共享锁失败\nC. 加共享锁、排它锁都成功\nD. 加共享锁、排它锁都失败\n问题2：\nA. 加共享锁成功，加排它锁失败\nB. 加排它锁成功，加共享锁失败\nC. 加共享锁、排它锁都成功\nD. 加共享锁、排它锁都失败\n问题1： D. 加共享锁、排它锁都失败\n问题2： C. 加共享锁、排它锁都成功\n数据库备份与恢复练习： A、完整 (10：00)→日志 (11：00)→日志 (13：00)→日志 (15：00)→差异 (16：00)\n准备工作：创建数据库和表 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 -- 使用 master 数据库 USE master; GO -- 如果数据库已存在，先删除它以便重新开始 IF DB_ID(N\u0026#39;学生管理数据库\u0026#39;) IS NOT NULL DROP DATABASE 学生管理数据库; GO -- 创建新的数据库 CREATE DATABASE 学生管理数据库; GO -- 切换到新创建的数据库 USE 学生管理数据库; GO -- 创建学生信息表 CREATE TABLE 学生信息 ( 学号 INT PRIMARY KEY IDENTITY(1,1), 姓氏 NVARCHAR(50) NOT NULL, 名字 NVARCHAR(50) NOT NULL, 出生日期 DATE, 入学日期 DATE DEFAULT GETDATE() ); GO -- 插入一些初始学生数据 INSERT INTO 学生信息 (姓氏, 名字, 出生日期) VALUES (N\u0026#39;张\u0026#39;, N\u0026#39;三\u0026#39;, \u0026#39;2000-01-15\u0026#39;), (N\u0026#39;李\u0026#39;, N\u0026#39;四\u0026#39;, \u0026#39;2001-03-20\u0026#39;), (N\u0026#39;王\u0026#39;, N\u0026#39;五\u0026#39;, \u0026#39;1999-07-10\u0026#39;); GO -- 查看当前学生数据 SELECT * FROM 学生信息; GO 进行完整备份 (Full Backup) 假设这是在 10:00 进行的。 1 2 3 4 5 6 7 8 9 10 USE master; -- 备份操作通常在 master 数据库中执行 GO -- 执行完整备份 BACKUP DATABASE 学生管理数据库 TO DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_完整_20250527_100000.bak\u0026#39; -- **已更新路径** WITH NOFORMAT, NOINIT, NAME = N\u0026#39;学生管理数据库完整备份_10点\u0026#39;, SKIP, NOREWIND, NOUNLOAD, STATS = 10; GO PRINT \u0026#39;完整备份完成，时间：10:00\u0026#39;; GO 插入一些新数据 (模拟数据库变化) 1 2 3 4 5 6 7 8 9 10 11 USE 学生管理数据库; GO INSERT INTO 学生信息 (姓氏, 名字, 出生日期) VALUES (N\u0026#39;赵\u0026#39;, N\u0026#39;六\u0026#39;, \u0026#39;2002-05-25\u0026#39;); GO SELECT * FROM 学生信息; -- 确认新数据 GO PRINT \u0026#39;10:30 插入新数据完成\u0026#39;; GO 进行第一次事务日志备份 (Log Backup) 1 2 3 4 5 6 7 8 9 10 USE master; GO -- 执行第一次事务日志备份 BACKUP LOG 学生管理数据库 TO DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_日志_20250527_110000.trn\u0026#39; -- **已更新路径** WITH NOFORMAT, NOINIT, NAME = N\u0026#39;学生管理数据库日志备份_11点\u0026#39;, SKIP, NOREWIND, NOUNLOAD, STATS = 10; GO PRINT \u0026#39;日志备份完成，时间：11:00\u0026#39;; GO 再次插入一些新数据 (模拟更多数据库变化) 1 2 3 4 5 6 7 8 9 10 11 USE 学生管理数据库; GO INSERT INTO 学生信息 (姓氏, 名字, 出生日期) VALUES (N\u0026#39;钱\u0026#39;, N\u0026#39;七\u0026#39;, \u0026#39;2003-09-01\u0026#39;); GO SELECT * FROM 学生信息; -- 确认新数据 GO PRINT \u0026#39;12:00 插入新数据完成\u0026#39;; GO 进行第二次事务日志备份 (Log Backup) 1 2 3 4 5 6 7 8 9 10 USE master; GO -- 执行第二次事务日志备份 BACKUP LOG 学生管理数据库 TO DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_日志_20250527_130000.trn\u0026#39; -- **已更新路径** WITH NOFORMAT, NOINIT, NAME = N\u0026#39;学生管理数据库日志备份_13点\u0026#39;, SKIP, NOREWIND, NOUNLOAD, STATS = 10; GO PRINT \u0026#39;日志备份完成，时间：13:00\u0026#39;; GO 进行差异备份 (Differential Backup) 1 2 3 4 5 6 7 8 9 10 USE master; GO -- 执行差异备份 BACKUP DATABASE 学生管理数据库 TO DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_差异_20250527_160000.bak\u0026#39; -- **已更新路径** WITH DIFFERENTIAL, NOFORMAT, NOINIT, NAME = N\u0026#39;学生管理数据库差异备份_16点\u0026#39;, SKIP, NOREWIND, NOUNLOAD, STATS = 10; GO PRINT \u0026#39;差异备份完成，时间：16:00\u0026#39;; GO 进行破坏性操作 (模拟数据丢失或损坏) 1 2 3 4 5 6 7 8 9 10 11 USE 学生管理数据库; GO TRUNCATE TABLE 学生信息; -- 清空表 GO SELECT * FROM 学生信息; -- 确认表已空 GO PRINT \u0026#39;已清空学生信息表，模拟数据丢失。\u0026#39;; GO Q1 恢复到 16:00 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 USE master; GO -- 确保数据库处于离线或删除状态，才能进行恢复 -- 在这里，我们通常会先尝试将数据库置为离线，如果失败（例如数据库不存在），则跳过 IF DB_ID(N\u0026#39;学生管理数据库\u0026#39;) IS NOT NULL BEGIN ALTER DATABASE 学生管理数据库 SET OFFLINE WITH ROLLBACK IMMEDIATE; PRINT \u0026#39;数据库 学生管理数据库 已置为离线。\u0026#39;; END; -- 或者如果您之前直接删除了数据库，则无需以上 ALTER DATABASE 语句。 -- 1. 恢复完整备份 (10:00) RESTORE DATABASE 学生管理数据库 FROM DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_完整_20250527_100000.bak\u0026#39; WITH NORECOVERY, REPLACE, -- **新增：强制覆盖现有数据库** MOVE N\u0026#39;学生管理数据库\u0026#39; TO N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\DATA\\学生管理数据库.mdf\u0026#39;, MOVE N\u0026#39;学生管理数据库_log\u0026#39; TO N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\DATA\\学生管理数据库_log.ldf\u0026#39;; GO PRINT \u0026#39;完整备份恢复完成 (NORECOVERY)。\u0026#39;; -- 2. 恢复差异备份 (16:00) RESTORE DATABASE 学生管理数据库 FROM DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_差异_20250527_160000.bak\u0026#39; WITH RECOVERY; GO PRINT \u0026#39;差异备份恢复完成 (RECOVERY)，数据库已联机到 16:00 的状态。\u0026#39;; -- 验证恢复结果 USE 学生管理数据库; GO SELECT * FROM 学生信息; GO 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 USE master; GO -- 再次模拟数据库被破坏或清空，以便重新进行恢复 IF DB_ID(N\u0026#39;学生管理数据库\u0026#39;) IS NOT NULL BEGIN ALTER DATABASE 学生管理数据库 SET OFFLINE WITH ROLLBACK IMMEDIATE; PRINT \u0026#39;数据库 学生管理数据库 已置为离线。\u0026#39;; END; -- 1. 恢复完整备份 (10:00) RESTORE DATABASE 学生管理数据库 FROM DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_完整_20250527_100000.bak\u0026#39; WITH NORECOVERY, REPLACE, -- **新增：强制覆盖现有数据库** MOVE N\u0026#39;学生管理数据库\u0026#39; TO N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\DATA\\学生管理数据库.mdf\u0026#39;, MOVE N\u0026#39;学生管理数据库_log\u0026#39; TO N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\DATA\\学生管理数据库_log.ldf\u0026#39;; GO PRINT \u0026#39;完整备份恢复完成 (NORECOVERY)。\u0026#39;; -- 2. 恢复 11:00 的日志备份 RESTORE LOG 学生管理数据库 FROM DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_日志_20250527_110000.trn\u0026#39; WITH NORECOVERY; GO PRINT \u0026#39;日志备份 11:00 恢复完成 (NORECOVERY)。\u0026#39;; -- 3. 恢复 13:00 的日志备份，停止在 12:00 RESTORE LOG 学生管理数据库 FROM DISK = N\u0026#39;D:\\sql\\gen\\MSSQL16.MSSQLSERVER\\MSSQL\\Backup\\学生管理数据库_日志_20250527_130000.trn\u0026#39; WITH RECOVERY, STOPAT = \u0026#39;2025-05-27 12:00:00.000\u0026#39;; GO PRINT \u0026#39;日志备份 13:00 恢复完成并停止在 12:00，数据库已联机。\u0026#39;; -- 验证恢复结果 USE 学生管理数据库; GO SELECT * FROM 学生信息; GO 后续选择略 ","date":"2025-05-27T21:18:11+08:00","permalink":"https://2332ly.github.io/p/%E6%95%B0%E6%8D%AE%E5%BA%93_%E7%BB%83%E4%B9%A0/","title":"数据库_练习"},{"content":"实验2 路由器基本配置 模型组建 路由器选择\n至少两条接口 两台路由器 0/0连接pc 0/1相互连接 实验配置 Router1配置 1 2 3 4 5 6 N1 7 A N2 3 F N3 9 C N6 10 C N8 5 E N9 3 C ","date":"2025-05-23T18:16:23+08:00","image":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C2/imagetop-1_hu_964cd9b0a02c9bd5.png","permalink":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C2/","title":"计算机网络_实验2"},{"content":"表单 form标签 所有表单标签包含在form内\n1 2 3 \u0026lt;form\u0026gt; \u0026lt;/form\u0026gt; input标签 type属性 决定input属性类型\n点击展开：input 标签 type 类型说明 type 类型 描述/功能 示例 HTML text 单行文本输入框 \u0026lt;input type=\u0026quot;text\u0026quot;\u0026gt; password 密码输入框，输入内容隐藏 \u0026lt;input type=\u0026quot;password\u0026quot;\u0026gt; email 邮箱地址输入框，自动校验格式 \u0026lt;input type=\u0026quot;email\u0026quot;\u0026gt; number 数字输入框，带上下箭头控制 \u0026lt;input type=\u0026quot;number\u0026quot;\u0026gt; checkbox 复选框，可以多选 \u0026lt;input type=\u0026quot;checkbox\u0026quot;\u0026gt; radio 单选框，同组只能选一个 \u0026lt;input type=\u0026quot;radio\u0026quot;\u0026gt; date 日期选择器 \u0026lt;input type=\u0026quot;date\u0026quot;\u0026gt; file 文件上传按钮 \u0026lt;input type=\u0026quot;file\u0026quot;\u0026gt; submit 提交按钮 \u0026lt;input type=\u0026quot;submit\u0026quot;\u0026gt; 1 2 3 \u0026lt;form\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; placeholder属性 1 2 3 \u0026lt;form\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; placeholder=\u0026#34;请输入文本\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; vaule属性 1 2 3 \u0026lt;form\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; value=\u0026#34;请输入文本\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; span|label框选 1 2 3 4 5 6 7 8 9 \u0026lt;form\u0026gt; \u0026lt;span\u0026gt;用户名: \u0026lt;input type=\u0026#34;text\u0026#34; value=\u0026#34;请输入用户名\u0026#34;\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;br\u0026gt; \u0026lt;span\u0026gt;密码: \u0026lt;input type=\u0026#34;password\u0026#34; value=\u0026#34;请输入密码\u0026#34;\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/form\u0026gt; 用户名: 密码: 想要整洁可以放置在表格中\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;form\u0026gt; \u0026lt;table border=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label\u0026gt;用户名：\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; placeholder=\u0026#34;请输入用户名\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label\u0026gt;密码：\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;password\u0026#34; placeholder=\u0026#34;请输入密码\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/form\u0026gt; 用户名： 密码： 单选radio name属性 1 2 3 4 5 6 7 8 9 10 \u0026lt;form\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label\u0026gt;性别:\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;gendar\u0026#34;\u0026gt;男\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;gendar\u0026#34;\u0026gt;女\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;gendar\u0026#34;\u0026gt;其他\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/form\u0026gt; 性别: 男 女 其他 for属性 label for属性一般与input id属性对应\n用户点击label时，光标能自动聚焦到文本框\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;form\u0026gt; \u0026lt;table border=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;用户名：\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;username\u0026#34; placeholder=\u0026#34;请输入用户名\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;密码：\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34; placeholder=\u0026#34;请输入密码\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/form\u0026gt; 用户名： 密码： 多选 checkbox 1 2 3 4 5 6 7 8 9 10 \u0026lt;form\u0026gt; \u0026lt;table border=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;hobby\u0026#34;\u0026gt;爱好:\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;hobby\u0026#34;\u0026gt;篮球\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;hobby\u0026#34;\u0026gt;足球\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;hobby\u0026#34;\u0026gt;乒乓球\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/form\u0026gt; 爱好: 篮球 足球 乒乓球 action属性\u0026amp;提交按键 submit action 提交后发送到向后端的服务器URL地址\n可用action=\u0026quot;#\u0026quot;表示不跳转\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \u0026lt;form action=\u0026#34;#\u0026#34; border=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;用户名：\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;username\u0026#34; placeholder=\u0026#34;请输入用户名\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;密码：\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34; placeholder=\u0026#34;请输入密码\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;table border=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label\u0026gt;性别:\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;gendar\u0026#34;\u0026gt;男\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;gendar\u0026#34;\u0026gt;女\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;gendar\u0026#34;\u0026gt;其他\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;table border=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;hobby\u0026#34;\u0026gt;爱好:\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;hobby\u0026#34;\u0026gt;篮球\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;hobby\u0026#34;\u0026gt;足球\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;hobby\u0026#34;\u0026gt;乒乓球\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;label for=\u0026#34;submit\u0026#34;\u0026gt;提交:\u0026lt;/label\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;提交\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/form\u0026gt; 用户名： 密码： 性别: 男 女 其他 爱好: 篮球 足球 乒乓球 提交: 实际应为这样 markdwon和html表现略有不同\n本网页采用markdown html共同编写 会有显示区别\n","date":"2025-05-23T12:02:20+08:00","image":"https://2332ly.github.io/p/web5_%E8%A1%A8%E5%8D%95/PixPin_2025-05-21_16-04-10-1-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web5_%E8%A1%A8%E5%8D%95/","title":"Web5_表单"},{"content":"实验3 本地电脑命令行即可\nwin+r 输入cmd或powershell\n推荐powershell\nipconfig命令 ipconfig 1 ipconfig ipconfig /all 1 ipconfig /all ipconfig /all 返回信息详解 Windows IP Configuration 显示主机网络的总体配置信息：\nHost Name：计算机名称，例如 LAPTOP-0INSFLG6。 Primary DNS Suffix：主 DNS 后缀，通常为空，表示未加入域。 Node Type：节点类型（如 Hybrid 表示混合类型）。 IP Routing Enabled：是否启用 IP 路由（一般为 No）。 WINS Proxy Enabled：是否启用 WINS 代理，较少使用。 Ethernet adapter 以太网 本地有线网卡的信息：\nMedia State：媒体状态，如 Media disconnected 表示未连接。 Description：网卡说明，例如 Realtek PCIe GBE Family Controller。 Physical Address：物理地址（MAC地址）。 DHCP Enabled：是否启用 DHCP 自动获取IP。 Autoconfiguration Enabled：是否启用自动配置。 Wireless LAN adapter 本地连接* 1 / 2 Wi-Fi Direct 虚拟适配器，系统自动生成：\nMedia State：媒体状态，通常未连接。 Description：设备说明，如 Microsoft Wi-Fi Direct Virtual Adapter。 Physical Address：MAC地址。 DHCP/Autoconfiguration Enabled：是否启用 DHCP / 自动配置。 Ethernet adapter 以太网 2 / 3 由 VPN、游戏加速器等软件创建的虚拟网卡：\nDescription：设备名称，例如 TAP-Windows Adapter V9、Netease UU TAP-Win32 Adapter。 Media State：未连接。 Physical Address：MAC地址。 DHCP/Autoconfiguration Enabled：一般启用，但未连接。 Wireless LAN adapter WLAN 当前正在使用的无线网络适配器：\nDescription：无线网卡名称，例如 Realtek 8852CE WiFi。 Physical Address：MAC地址。 DHCP Enabled：启用 DHCP，动态获取 IP。 Autoconfiguration Enabled：启用自动配置。 IPv6 Address：当前分配的 IPv6 地址。 Temporary IPv6 Address：用于隐私保护的临时 IPv6。 Link-local IPv6 Address：局域网内部通信用的地址。 IPv4 Address：分配到的 IPv4 地址，例如 192.153.75.70。 Subnet Mask：子网掩码，定义子网范围。 Lease Obtained / Expires：IP 地址租约的获取和到期时间。 Default Gateway：默认网关，通常是路由器地址。 DHCP Server：为设备分配 IP 的 DHCP 服务器地址。 DHCPv6 IAID / DUID：IPv6 配置的唯一标识符。 DNS Servers：用于域名解析的服务器列表。 NetBIOS over Tcpip：是否启用了 NetBIOS（局域网名称识别协议）。 ping命令 ping 127.0.0.1 1 ping 127.0.0.1 127.0.0.1 是回环地址\n作用是测试本机网络协议栈是否正常工作 ping 本机IP ipconfig命令中的本机地址\nipv4或6随意 建议4\n1 ping 本机ip ping 局域网内其他ip ping 手机ip(由于防火墙可能ping不通) 手机地址有防火墙ping不通 (备选) Boson NetSim 10模拟 建立\n设置ip略\npc1 192.168.1.1 255.255.255.0\npc1 192.168.1.2 255.255.255.0\nping 网关ip 网关ip位置\n1 ping 网关ip ping 远程ip 1 ping 1.1.1.1 1.1.1.1 是CloudflareDNS 服务器IP 随便ping ping localhost localhost：是一个特殊的主机名，代表“本机”\n1 ping localhost ping 互联网上服务器 1 ping www.bilibili.com tracert 1 tracert www.bilibili.com 1 tracert www.github.com 跳数 时间1 时间2 时间3 主机名/IP地址\n选项 含义 -d 不解析主机名，仅显示 IP 地址 -h \u0026lt;最大跃点\u0026gt; 设置最大跳数（默认 30） -w \u0026lt;超时\u0026gt; 每跳等待回应的时间（单位：毫秒） 发送 ICMP 回显请求（Echo Request）或 UDP 数据包； 设置每个数据包的 TTL（Time To Live）值从 1 开始递增； 每当数据包到达一个路由器，TTL 减 1； 当 TTL 减到 0，路由器丢弃该包并返回一个 “超时”（Time Exceeded）的 ICMP 报文； tracert 接收到这个超时响应，就知道这是一跳； 重复此过程直到到达目标主机或达到最大跳数（默认 30） netstat 有网络上下行就可以进行 打开浏览器访问 哔哩哔哩放个视频\nnetstat 1 netstat 适可而止就行统计数据太多了 太慢了 ctrl+c强制停止\nnetstat -s 1 netstat –s netstat -e 1 netstat –e netstat -r 1 netstat -r netstat -a 1 netstat -a 连接太多了\nnetstat -n 1 netstat -n 命令 核心用途 分析重点 netstat 查看连接状态 是否成功访问外部网络 netstat -s 协议层统计数据 检查 TCP/UDP 错误和传输情况 netstat -e 网卡接口统计信息 流量分析、是否有异常错误 netstat -r 路由信息 是否正确配置默认网关 netstat -a 所有监听与连接端口 有无监听服务/端口暴露风险 netstat -n 纯 IP 连接信息 快速定位目标地址 arp 记得管理员权限运行 arp -a 1 arp -a arp -s 1 2 3 4 arp -s ip地址 arp -s 192.168.1.200 00-aa-bb-cc-dd-ee //例子 记得删除 arp -a arp -d 1 2 3 arp -d 192.168.1.200 //删除ip arp -a 命令 主要功能 备注 arp -a 查看所有缓存的 ARP 项 包括动态学习与静态设置 arp -s IP MAC 添加静态 ARP 条目 永久有效，需管理员权限 arp -d IP 删除指定静态 ARP 项 动态项无法手动删除 route 需要管理员权限\nroute print 1 route print route add 1 2 route add 10.10.10.0 mask 255.255.255.0 192.168.1.1 metric 1 route print route change 1 2 route change 10.10.10.0 mask 255.255.255.0 192.168.1.254 route print route delete 1 2 route delete 10.10.10.0 route print 命令 示例 功能 备注 route print — 显示完整路由表 可用于排查连接问题 route add route add 10.10.10.0 mask 255.255.255.0 192.168.1.1 添加静态路由 需管理员权限 route change route change 10.10.10.0 mask 255.255.255.0 192.168.1.254 修改路由路径 要先存在 route delete route delete 10.10.10.0 删除指定路由 删除自定义路由防止冲突 net user net user 1 net user net user id 1 net user 用户id net use 当前计算机没有连接任何网络共享资源，也没有映射网络驱动器\n","date":"2025-05-22T20:17:43+08:00","image":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C3/imagetop-1_hu_964cd9b0a02c9bd5.png","permalink":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C3/","title":"计算机网络_实验3"},{"content":"实验1 下载-2025春计算机网络实验指导书-1\nBoson NetSim 10 本地安装 下载地址\n百度网盘\nonedrive\n解压 得到三个文件 Setup为主程序安装文件\nPatched Mscon43demo.zip为修改破解文件\n安装 点击netsim10.exe 进行安装\n推荐安装到C:\\Boson目录中 不然会出现%Incomplete command问题\n二次解压 解压Mscon43demo.zip\n得到mscon43demo.dll文件 修改破解 把mscon43demo.dll复制到C:\\Boson, C:\\ProgramData\\Boson Software\\Boson Netsim10\\mscon43demo.dll，两个位置，进行替换与粘贴\n把Patch目录下的三个文件复制到C:\\Boson中，进行替换。\n运行 进入C盘C:\\Boson 右键图标发送快捷方式至桌面 点击桌面图标运行Boson NetSim 10\n局域网组建 模型组建 局域网组建\n点击左下角Network Designer进行配置 在左侧拖拽一台switch交换机两台pc 右键交换机 点击New Connection配置线路 分别连接两个pc至不同接口 实验配置 点击按键 进入实验配置 开启switch(y1s1其实不开启也能ping通) 不需要(\n在switch1配置界面分别输入\n1 2 enable //进入特权模式 configure terminal //进入配置模式 根据连接接口开启工作状态\npc1-\u0026gt;fe1 pc2-\u0026gt;fe2 1 2 3 interface f0/1 //进入f0/1端口配置模式 no shutdown //开启端口 exit //退出f0/1端口配置模式 f0/2同理\n1 2 3 interface f0/2 no shutdown exit )\npc配置 配置IP地址 选择pc1进行配置 输入配置IP地址和子网掩码\n1 ipconfig /ip 192.168.1.1 255.255.255.0 //事例 pc2同理ip地址主机位需变更\n1 ipconfig /ip 192.168.1.2 255.255.255.0 //事例 返回pc1\nping pc2测试连接\n1 ping 192.168.1.2 返回成功确认联通 局域网拓展 模型组建 在1基础上添加一组交换机和两组pc PS:想偷懒可以不加交换机只加pc switch2 f0/1-\u0026gt;pc1\nf0/2-\u0026gt;pc2 交换机连接\n我这里选择将两台交换机f0/12相连\n现实中如果有高速吉比特网口优先接高速\n实验配置 不需要(\n交换机 pc 开启端口略过\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 switch1: interface f0/1 no shutdown exit interface f0/2 no shutdown exit switch2: interface f0/1 no shutdown exit interface f0/2 no shutdown exit )\npc配置通信 1 2 3 4 5 6 pc1: ipconfig /ip 192.168.1.1 255.255.255.0 pc3: ipconfig /ip 192.168.1.3 255.255.255.0 pc1: ping 192.168.1.3 虚拟VLAN 模型组件不变 略\u0026hellip;\u0026hellip;\n实验配置 创建虚拟VLAN 进入switch1\n1 2 3 4 enable configure terminal vlan 10 exit vlan 20同理\n1 2 3 4 enable configure terminal vlan 20 exit switch1分配VLAN 分配vlan 10\n1 2 3 4 interface f0/1 switchport mode access switchport access vlan 10 exit 1 2 3 4 interface f0/2 switchport mode access switchport access vlan 10 exit 1 2 3 4 5 interface f0/12 switchport mode trunk switchport trunk encapsulation dot1q switchport trunk allowed vlan 10,20 exit switch2分配VLAN 分配vlan 20\n1 2 3 4 interface f0/1 switchport mode access switchport access vlan 20 exit 1 2 3 4 interface f0/2 switchport mode access switchport access vlan 20 exit 1 2 3 4 5 interface f0/12 switchport mode trunk switchport trunk encapsulation dot1q switchport trunk allowed vlan 10,20 exit 保存配置 1 2 Switch1# write memory Switch2# write memory 查看配置 1 2 Switch1# show running-config Switch1# show vlan brief pc配置通信 配置pc IP地址 不同vlan间网络位不能相同\n相同vlan间网络位相同,主机位不同\n1 2 3 4 5 6 7 8 9 10 11 12 PC1: IP 地址: 192.168.1.1 子网掩码: 255.255.255.0 PC2: IP 地址: 192.168.1.2 子网掩码: 255.255.255.0 PC3: IP 地址: 192.168.2.1 子网掩码: 255.255.255.0 PC4: IP 地址: 192.168.2.2 子网掩码: 255.255.255.0 相同vlan测试联通 进入pc1\n1 ping 192.168.1.2 不同vlan测试联通 1 ping 192.168.2.1 应显示失败 因为默认情况下 VLAN 之间通信域是隔离的 ","date":"2025-05-21T21:18:07+08:00","image":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C1/imagetop-1_hu_964cd9b0a02c9bd5.png","permalink":"https://2332ly.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C_%E5%AE%9E%E9%AA%8C1/","title":"计算机网络_实验1"},{"content":"块元素 块级元素通常会从新行开始，并占据整行的宽度，因此它们会在页面上呈现为一块独立的内容块。 可以包含其他块级元素和行内元素。 常见的块级元素包括\u0026lt;div\u0026gt;，\u0026lt;p\u0026gt;，\u0026lt;h1\u0026gt;到\u0026lt;h6\u0026gt;，\u0026lt;ul\u0026gt;，\u0026lt;ol\u0026gt;，\u0026lt;1i\u0026gt;，\u0026lt;table\u0026gt;，\u0026lt;form\u0026gt;等。 行内元素 行内元素通常在同一行内呈现，不会独占一行。 只占据其内容所需的宽度，而不是整行的宽度。 行内元素不能包含块级元素，但可以包含其他行内元素。 常见的行内元素包括\u0026lt;span\u0026gt;，\u0026lt;a\u0026gt;，\u0026lt;strong\u0026gt;，\u0026lt;em\u0026gt;，\u0026lt;img\u0026gt;，\u0026lt;br\u0026gt;，\u0026lt;input\u0026gt;等。 div标签 没有语义 .类名 +tab 生成带类名div标签 #名称 +tab 生成带名称div标签 导航栏\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;div class=\u0026#34;nav\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接1\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接2\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接3\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接4\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接5\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;文章标题\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;\u0026gt;这是文章的第一段内容。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;这是文章的第二段内容。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;这是文章的第三段内容。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;这是文章的第四段内容。\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; 链接1 链接2 链接3 链接4 链接5 文章标题 这是文章的第一段内容。\n这是文章的第二段内容。\n这是文章的第三段内容。\n这是文章的第四段内容。\nspan标签 包装文本图片 1 2 3 4 5 6 7 \u0026lt;span\u0026gt;标签1\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签2\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签3\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签4\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;标签5\u0026lt;/span\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;span\u0026gt;这是一个\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;链接\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; 标签1 标签2 标签3 标签4 标签5\n这是一个链接 \u0026lt;div\u0026gt; \u0026lt;span\u0026gt;通常配合css jsc一起使用\n","date":"2025-05-21T18:45:10+08:00","image":"https://2332ly.github.io/p/web4_%E5%9D%97%E4%B8%8E%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web4_%E5%9D%97%E4%B8%8E%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/","title":"Web4_块与行内元素"},{"content":"标签属性 介绍 \u0026lt;标签 属性名 = \u0026ldquo;属性值\u0026rdquo;\u0026gt;\n属性 描述/th\u003e class 类名 可以一个或多个 id id值 唯一 style 元素行内样式 超链接 属性herf 可定义路径 网页URL 电子邮箱地址 手机号 1 \u0026lt;a href=\u0026#34;https://www.bilibili.com\u0026#34;\u0026gt;bilibili\u0026lt;/a\u0026gt; bilibili\n属性target 打开方式 1 2 \u0026lt;a href=\u0026#34;Web3/PixPin_2025-05-21_16-04-10-1.png\u0026#34; target=\u0026#34;_parent\u0026#34;\u0026gt;路径文件\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;空\u0026lt;/a\u0026gt; 路径文件\n空\n图片 src图片路径(相对/绝对路径)/URL 1 \u0026lt;img src=\u0026#34;img1.webp\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt;\u0026lt;br\u0026gt; alt替代文本 1 \u0026lt;img src=\u0026#34;img2.webp\u0026#34; alt=\u0026#34;该图片无法显示\u0026#34;\u0026gt;\u0026lt;!--img2不存在--\u0026gt; width宽度 height高度 1 \u0026lt;img src=\u0026#34;img1.webp\u0026#34; alt=\u0026#34;\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;100\u0026#34;\u0026gt; ","date":"2025-05-21T16:48:54+08:00","image":"https://2332ly.github.io/p/web3_%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web3_%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7/","title":"Web3_标签属性"},{"content":"常用文本标签 body标签框内 1 2 3 \u0026lt;body\u0026gt; 在此修改 \u0026lt;/body\u0026gt; 标题标签 1 2 3 4 5 6 \u0026lt;h1\u0026gt;一级标题\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;二级标题\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;三级标题\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;四级标题\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;五级标题\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;六级标题\u0026lt;/h6\u0026gt; 一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 段落标签 1 2 3 4 5 6 7 8 \u0026lt;p\u0026gt; 换行标签\u0026lt;br\u0026gt; 这是一段文本\u0026lt;br\u0026gt; \u0026lt;b\u0026gt;字体加粗\u0026lt;/b\u0026gt;\u0026lt;br\u0026gt; \u0026lt;i\u0026gt;斜体\u0026lt;/i\u0026gt;\u0026lt;br\u0026gt; \u0026lt;u\u0026gt;下划线\u0026lt;/u\u0026gt;\u0026lt;br\u0026gt; \u0026lt;s\u0026gt;删除线\u0026lt;/s\u0026gt; \u0026lt;/p\u0026gt; 换行标签\n这是一段文本\n字体加粗\n斜体\n下划线\n删除线 列表 无序列表 1 2 3 4 5 \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;无序列表1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;无序列表2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;无序列表3\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 无序列表1 无序列表2 无序列表3 有序列表 1 2 3 4 5 \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;有序列表1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;有序列表2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;有序列表3\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; 有序列表1 有序列表2 有序列表3 表格标签 创建表格 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;列标题1\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;列标题2\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;列标题3\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;元素1\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素2\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素3\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;元素4\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素5\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素6\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;元素7\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素8\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;元素9\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; 列标题1 列标题2 列标题3 元素1 元素2 元素3 元素4 元素5 元素6 元素7 元素8 元素9 ","date":"2025-05-21T15:55:18+08:00","image":"https://2332ly.github.io/p/web2_%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web2_%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/","title":"Web2_文本标签"},{"content":"HTML 基础配置 vscode下载地址 插件下载\n1.Chinese (Simplified) 汉化插件 2.livesever(实时查看修改)\n3.Auto Rename Tag(自动补齐后标签) 4.HTML CSS Support css优化\n创建html文件 选择文件夹\n在vscode选择文件夹内新建.html后缀文件点击进入 在vscode中输入西文!按下tab自动补充html文档结构\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 更改title部分更改标签页名称\n1 \u0026lt;title\u0026gt;网页\u0026lt;/title\u0026gt; ","date":"2025-05-20T23:15:45+08:00","image":"https://2332ly.github.io/p/web1_%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/PixPin_2025-05-21_16-04-10-1_hu_5e48b4ab85d0f68.png","permalink":"https://2332ly.github.io/p/web1_%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"Web1_环境搭建"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://2332ly.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://2332ly.github.io/p/emoji-support/","title":"Emoji Support"}]